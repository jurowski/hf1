

<!-- FACEBOOK LOGIN  CODE -->
<!-- https://developers.facebook.com/docs/facebook-login/getting-started-web/ -->

<div id="fb-root"></div>
<script>
  window.fbAsyncInit = function() {
    FB.init({
      appId      : '206493129535606', // App ID
      channelUrl : '//HABITFORGE.COM/channel.html', // Channel File
      status     : true, // check login status
      cookie     : true, // enable cookies to allow the server to access the session
      xfbml      : true  // parse XFBML
    });

  // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
  // for any authentication related change, such as login, logout or session refresh. This means that
  // whenever someone who was previously logged out tries to log in again, the correct case below 
  // will be handled. 
  FB.Event.subscribe('auth.authResponseChange', function(response) {
    // Here we specify what we do with the response anytime this event occurs. 
    if (response.status === 'connected') {
      // The response object is returned with a status field that lets the app know the current
      // login status of the person. In this case, we're handling the situation where they 
      // have logged in to the app.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // In this case, the person is logged into Facebook, but not into the app, so we call
      // FB.login() to prompt them to do so. 
      // In real-life usage, you wouldn't want to immediately prompt someone to login 
      // like this, for two reasons:
      // (1) JavaScript created popup windows are blocked by most browsers unless they 
      // result from direct interaction from people using the app (such as a mouse click)
      // (2) it is a bad experience to be continually prompted to login upon page load.
      FB.login();
    } else {
      // In this case, the person is not logged into Facebook, so we call the login() 
      // function to prompt them to do so. Note that at this stage there is no indication
      // of whether they are logged into the app. If they aren't then they'll see the Login
      // dialog right after they log in to Facebook. 
      // The same caveats as above apply to the FB.login() call here.
      FB.login();
    }
  });
  };

  // Load the SDK asynchronously
  (function(d){
   var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
   if (d.getElementById(id)) {return;}
   js = d.createElement('script'); js.id = id; js.async = true;
   js.src = "//connect.facebook.net/en_US/all.js";
   ref.parentNode.insertBefore(js, ref);
  }(document));

  // Here we run a very simple test of the Graph API after login is successful. 
  // This testAPI() function is only called in those cases. 
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me?scope=email', function(response) {
      console.log('Good to see you, ' + response.name + '.');
    });

    // SGJ test trying to get access token and redirect
   // FB.api('/me', function(response) {
   //  var user_info = 'fb_id='+response.id+'&fb_first_name='+response.username+'&fb_last_name='+response.last_name+'&fb_gender='+response.gender+'&fb_timezone='+response.timezone;
   //  console.log(user_info);
   //  window.location.assign('https://habitforge.com/?'+user_info);
   // });


  }
</script>

<!--
  Below we include the Login Button social plugin. This button uses the JavaScript SDK to
  present a graphical Login button that triggers the FB.login() function when clicked.

  Learn more about options for the login button plugin:
  /docs/reference/plugins/login/ -->

<!-- <fb:login-button show-faces="false" scope="email" width="100" max-rows="1"></fb:login-button> -->

<fb:login-button size="medium" show-faces="false" scope="email" onlogin="Log.info('onlogin callback');">
  Log In with Facebook
</fb:login-button>
<!-- END FACEBOOK LOGIN CODE -->


<% if params[:fb_email] %>
  <% session[:fb_email] = params[:fb_email] %>
<% end %>

<% if params[:fb_id] %>

  <% begin %>
  <% session[:fb_id] = params[:fb_id] %>
  <% session[:fb_username] = params[:fb_username] %>
  <% session[:fb_first_name] = params[:fb_first_name] %>
  <% session[:fb_last_name] = params[:fb_last_name] %>
  <% session[:fb_gender] = params[:fb_gender] %>
  <% session[:fb_timezone] = params[:fb_timezone] %>

  <% rescue %>
  There was an error saving fb info.
  <% end %>

<% end %>



<% if !session[:fb_username] and !params[:fb_username] %>

  <script>
  window.fbAsyncInit = function() {
    FB.init({
      appId      : '206493129535606', // App ID
      channelUrl : '//HABITFORGE.COM/channel.html', // Channel File
      status     : true, // check login status
      cookie     : true, // enable cookies to allow the server to access the session
      xfbml      : true  // parse XFBML
    });

    FB.Event.subscribe('auth.authResponseChange', function(response) {
      // Here we specify what we do with the response anytime this event occurs. 
      if (response.status === 'connected') {
        // The response object is returned with a status field that lets the app know the current
        // login status of the person. In this case, we're handling the situation where they 
        // have logged in to the app.

          // SGJ test trying to get access token and redirect
         FB.api('/me?scope=email', function(response) {
          var user_info = 'fb_id='+response.id+'&fb_username='+response.username+'&fb_first_name='+response.first_name+'&fb_last_name='+response.last_name+'&fb_gender='+response.gender+'&fb_timezone='+response.timezone+'&fb_email='+response.email;
          console.log(user_info);
          window.location.assign('https://habitforge.com/user_session/new?skip_intro=1&'+user_info);     
         }); // end FB.api
      } // end if connected

    }); // end FB.Event.subscribe

  }; // end window.fbAsyncInit
  </script>
<% end %>



<% if current_user %>
  <script>
    window.location.assign('https://habitforge.com/goals');     
  </script>    
<% else %>
  <div class="alert info" style="display:block;">  
    Sorry, we don't have that facebook account in our system. You can <a href="/">register on the home page</a>.
 </div>
<% end %>



